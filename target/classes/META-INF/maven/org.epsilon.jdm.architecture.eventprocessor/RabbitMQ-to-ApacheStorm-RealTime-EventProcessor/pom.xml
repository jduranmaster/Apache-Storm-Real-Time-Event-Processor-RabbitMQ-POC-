<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.epsilon.jdm.architecture.eventprocessor</groupId>
	<artifactId>RabbitMQ-to-ApacheStorm-RealTime-EventProcessor</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<storm.scope>provided</storm.scope>
		<junit.version>4.11</junit.version>
		<mockito-core.version>1.9.5</mockito-core.version>
		<slf4j-api.version>1.7.5</slf4j-api.version>
		<storm.version>0.9.0.1</storm.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<guava.version>15.0</guava.version>
		<commons-io.version>1.3.2</commons-io.version>
		<jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>
		<amqp-client.version>3.3.5</amqp-client.version>
	</properties>

	<repositories>
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
		<repository>
			<id>apache-snapshots</id>
			<url>https://repository.apache.org/content/groups/snapshots</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- DEPENDENCIES FOR TEST -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core.version}</version>
		</dependency>
		<!-- END: DEPENDENCIES FOR TEST -->

		<!-- LOGGING DEPENDENCIES -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<!-- END: LOGGING DEPENDENCIES -->

		<!-- ALL PURPOSES DEPENDENCIES -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<!-- END: ALL PURPOSES DEPENDENCIES -->

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-mapper-asl.version}</version>
		</dependency>

		<!-- STORM DEPENDENCY -->
<!-- 		<dependency> -->
<!-- 			<groupId>storm</groupId> -->
<!-- 			<artifactId>storm</artifactId> -->
<!-- 			<version>${storm.version}</version> -->
<!-- 			<scope>${storm.scope}</scope> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>0.10.0</version>
			<scope>${storm.scope}</scope>
		</dependency>
		

		<!-- MAPPING CACHE -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		<!-- END: MAPPING CACHE -->

		<!-- AMQ RabbitMQ client -->
		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>${amqp-client.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Bind the maven-assembly-plugin to the package phase this will create 
				a jar file without the storm dependencies suitable for deployment to a cluster. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<descriptors>
						<descriptor>src/main/assemblies/configs-dist.xml</descriptor>
					</descriptors>
					<archive>
						<manifest>
							<mainClass>${main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>launch-main</id>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeProjectDependencies>true</includeProjectDependencies>
					<includePluginDependencies>false</includePluginDependencies>
					<classpathScope>compile</classpathScope>
					<mainClass>${main.class}</mainClass>
					<commandlineArgs>${main.arguments}</commandlineArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/mock/java</source>
							</sources>
							<resources>
								<resource>
									<directory>src/mock/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<forkMode>always</forkMode>
							<forkedProcessTimeoutInSeconds>60</forkedProcessTimeoutInSeconds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>download-sources</id>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>sources</goal>
								</goals>
								<configuration>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>download-javadoc</id>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>resolve</goal>
								</goals>
								<configuration>
									<classifier>javadoc</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Use for build an standalone jar for local executions. Run maven with 
				option -Dinclude.storm.libraries for profile activation -->
			<id>storm-as-compile</id>
			<activation>
				<property>
					<name>include.storm.libraries</name>
				</property>
			</activation>

			<properties>
				<storm.scope>compile</storm.scope>
			</properties>
		</profile>
	</profiles>

</project>